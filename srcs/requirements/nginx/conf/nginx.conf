events
{
	worker_connections 1024;
}

http
{
	server {
		listen 443 ssl;
		listen [::]:443 ssl;
		server_name rshatra.42.fr;

		ssl_certificate /etc/nginx/ssl/rshatra.42.fr.crt;
		ssl_certificate_key /etc/nginx/ssl/rshatra.42.fr.key;

		ssl_protocols TLSv1.2 TLSv1.3;
		ssl_prefer_server_ciphers on;

		root /var/www/html;

		index index.php index.html;

		location / {
			try_files $uri $uri/ /index.php?$args;
		}

		location ~ \.php$ {
			include snippets/fastcgi-php.conf;
			fastcgi_pass wordpress:9000;
		}

		location ~ /\.ht {
			deny all;
		}
	}
}


# 3 his directive sets the maximum number of simultaneous connections that
	# can be handled by each worker process. Here, it's set to 1024.
	# This means each worker can handle up to 1024 concurrent connections.

# 24 This tries to serve the requested URI as a file or directory. If it doesn't exist,
	#it will redirect to index.php and pass the query parameters ($args)

# 27 Matches any request that ends with .php
# 28 Includes a configuration file with recommended FastCGI settings for PHP.
# 29 This forwards the PHP requests to a FastCGI server running on the host wordpress at port 9000.
	# In a Docker setup, this would typically point to a PHP-FPM container running on the wordpress service.

# 32 Matches requests for files that start with .ht (commonly used for Apache configuration files).
# 33 Denies access to these files to improve security


# FastCGI is a protocol used to enable web servers to interact with applications, such as PHP scripts,
	# in an efficient manner. It improves the performance of web applications by handling dynamic content
	#separately from static content and reducing the overhead associated with starting new processes for
	# each request.
